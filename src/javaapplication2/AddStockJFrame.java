/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javaapplication2;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Duran AYNAL
 */
public class AddStockJFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddStockJFrame
     */

    public String message;

    
    Stock stock = new Stock();
 
    public AddStockJFrame() {
        initComponents();
        fullTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        desc = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();
        Message = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 51));

        jLabel1.setText("id: ");

        jLabel2.setText("desc:");

        jLabel4.setText("total: ");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 255, 0));
        jButton2.setText("update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "description", "total", "date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        stockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(stockTable);

        Message.setForeground(new java.awt.Color(255, 0, 0));

        deleteButton.setText("delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(id)
                                .addComponent(desc, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))))
                    .addComponent(Message)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(Message)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(deleteButton)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(236, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Message.setText("");
        Date date = new Date();
        SimpleDateFormat ft = 
        new SimpleDateFormat ("E yyyy.MM.dd");
        String dNow = ft.format(date);
        String text1,text2,text3,text4;
        DefaultTableModel model = (DefaultTableModel) stockTable.getModel();
        text1 = id.getText();
        
        if(!text1.trim().equals("")){
            model.addRow(new Object[]{id.getText(), desc.getText(), total.getText(), dNow});
            }else{
            Message.setText("Product id should not be left block");
        }
        Product product = new Product();
        product.setId(Integer.parseInt(id.getText()));
        product.setDescription(desc.getText());
        product.setAdet(Integer.parseInt(total.getText()));
        product.setdNow(dNow);
        try {
            saveStock(product); 
        }catch(IOException | ClassNotFoundException e){}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void saveStock(Product product) throws IOException, ClassNotFoundException{
       ArrayList<Product> products = new ArrayList<>();
        
       try
        {
            FileInputStream fis = new FileInputStream("myfile");
            ObjectInputStream ois = new ObjectInputStream(fis);
            products = (ArrayList) ois.readObject();
            ois.close();
            fis.close();
         }catch(IOException ioe){
             ioe.printStackTrace();
             return;
          }catch(ClassNotFoundException c){
             System.out.println("Class not found");
             c.printStackTrace();
             return;
          }
        for(Product tmp: products){
            System.out.println(tmp.toString());
        }
        products.add(product);
      
        try{
         FileOutputStream fos= new FileOutputStream("myfile");
         ObjectOutputStream oos= new ObjectOutputStream(fos);
         oos.writeObject(products);
         oos.close();
         fos.close();
       }catch(IOException ioe){
            ioe.printStackTrace();
        } 
      
        
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Message.setText("");
        Date date = new Date();
        SimpleDateFormat ft = 
        new SimpleDateFormat ("E yyyy.MM.dd");
        DefaultTableModel model = (DefaultTableModel) stockTable.getModel();
        if(stockTable.getSelectedRow() == -1){
            if(stockTable.getRowCount() == 0){
                Message.setText("Table is empty");
            }else{
                Message.setText("You must select a product");
                }
        }else{
                int index = stockTable.getSelectedRow();
                String text1 = id.getText();
                String text2 = desc.getText();
                String text3 = total.getText();
                String text4 = ft.format(date);
                
                model.setValueAt(text1, stockTable.getSelectedRow(),0);
                model.setValueAt(text2, stockTable.getSelectedRow(),1);
                model.setValueAt(text3, stockTable.getSelectedRow(),3);
                model.setValueAt(text4,stockTable.getSelectedRow(),2);
                saveUpdate(index,text1,text2,text3,text4);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void saveUpdate(int index, String text1, String text2, String text3, String text4){
        ArrayList<Product> products = new ArrayList<>();
        
        try
        {
            FileInputStream fis = new FileInputStream("myfile");
            ObjectInputStream ois = new ObjectInputStream(fis);
            products = (ArrayList) ois.readObject();
            ois.close();
            fis.close();
         }catch(IOException ioe){
             ioe.printStackTrace();
             return;
          }catch(ClassNotFoundException c){
             System.out.println("Class not found");
             c.printStackTrace();
             return;
          }
        
        products.get(index).setId(Integer.parseInt(text1));
        products.get(index).setDescription(text2);
        products.get(index).setAdet(Integer.parseInt(text3));
        products.get(index).setdNow(text4);
        
      
        try{
         FileOutputStream fos= new FileOutputStream("myfile");
         ObjectOutputStream oos= new ObjectOutputStream(fos);
         oos.writeObject(products);
         oos.close();
         fos.close();
       }catch(IOException ioe){
            ioe.printStackTrace();
        } 
    
    }
            
    private void stockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) stockTable.getModel();
        id.setText(model.getValueAt(stockTable.getSelectedRow(),0).toString());
        desc.setText(model.getValueAt(stockTable.getSelectedRow(),1).toString());
        total.setText(model.getValueAt(stockTable.getSelectedRow(),2).toString());
        
    }//GEN-LAST:event_stockTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) stockTable.getModel();
        if(stockTable.getSelectedRow() == -1){
             if(stockTable.getRowCount() == 0){
                 Message.setText("Table is empty");
             }else{
                 Message.setText("You must select a product");
                 }
         }else{
                int index= stockTable.getSelectedRow();
                saveDelete(index);
                model.removeRow(index);
         }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void saveDelete(int index){
     ArrayList<Product> products = new ArrayList<>();
        
        try
        {
            FileInputStream fis = new FileInputStream("myfile");
            ObjectInputStream ois = new ObjectInputStream(fis);
            products = (ArrayList) ois.readObject();
            ois.close();
            fis.close();
         }catch(IOException ioe){
             ioe.printStackTrace();
             return;
          }catch(ClassNotFoundException c){
             System.out.println("Class not found");
             c.printStackTrace();
             return;
          }
        
        products.remove(index);
      
        try{
         FileOutputStream fos= new FileOutputStream("myfile");
         ObjectOutputStream oos= new ObjectOutputStream(fos);
         oos.writeObject(products);
         oos.close();
         fos.close();
       }catch(IOException ioe){
            ioe.printStackTrace();
        } 
      }
    private void fullTable(){
         ArrayList<Product> products = new ArrayList<>();
         try
        {
            FileInputStream fis = new FileInputStream("myfile");
            ObjectInputStream ois = new ObjectInputStream(fis);
            products = (ArrayList) ois.readObject();
            ois.close();
            fis.close();
         }catch(IOException ioe){
             ioe.printStackTrace();
             return;
          }catch(ClassNotFoundException c){
             System.out.println("Class not found");
             c.printStackTrace();
             return;
          }
          DefaultTableModel model = (DefaultTableModel) stockTable.getModel();
          for(Product temp:products){
                model.addRow(new Object[]{temp.getId(), temp.getDescription(), temp.getAdet(), temp.getdNow()});
          
          }
         
    }
    /**
     * @param args the command line arguments
     */

        
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Message;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField desc;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable stockTable;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
