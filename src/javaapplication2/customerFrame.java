/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javaapplication2;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Duran AYNAL
 */
public class customerFrame extends javax.swing.JFrame {

    /**
     * Creates new form customerFrame
     */
    public customerFrame() {
        initComponents();
       fullTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        surname = new javax.swing.JTextField();
        no1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        no2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        add = new javax.swing.JButton();
        change = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        message = new javax.swing.JLabel();
        Message = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("id: ");

        jLabel2.setText("name: ");

        jLabel3.setText("surname: ");

        jLabel4.setText("no: ");

        jLabel5.setText("no: ");

        jLabel6.setText("address: ");

        address.setColumns(20);
        address.setRows(5);
        jScrollPane2.setViewportView(address);

        add.setText("add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        change.setText("change");
        change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeActionPerformed(evt);
            }
        });

        delete.setText("delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "surname", "no1", "no2", "address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(customerTable);

        jLabel7.setForeground(new java.awt.Color(255, 0, 0));

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));

        message.setForeground(new java.awt.Color(255, 0, 0));

        Message.setText("jLabel9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(no1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(surname)
                                    .addComponent(no2)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name)
                                    .addComponent(id))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(change, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(message)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Message)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(no1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(no2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(add)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(change)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(message)
                            .addComponent(Message))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 14, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        Message.setText("");
         int jid;
         String jname;
         String jsurname;
         int jno1;
         int jno2;
         String jaddress;
         Customer customer = new Customer();
         
        DefaultTableModel model;
        model = (DefaultTableModel) customerTable.getModel();
        
        if(!id.getText().trim().equals("")){
            jid = Integer.parseInt(id.getText());
            jname = name.getText();
            jsurname = surname.getText();
            jno1 = Integer.parseInt(no1.getText());
            jno2= Integer.parseInt(no2.getText());
            jaddress = address.getText();
            model.addRow(new Object[]{jid, jname, jsurname, jno1, jno2, jaddress});
            customer.setId(jid);
            customer.setName(jname);
            customer.setSurname(jsurname);
            customer.setNo1(jno1);
            customer.setNo2(jno2);
            customer.setAddress(jaddress);
            addSave(customer);
            }else{
            Message.setText("Product id should not be left block");
        }
    }//GEN-LAST:event_addActionPerformed

    private void addSave(Customer customer){
       ArrayList<Customer> customers = new ArrayList<>();
    
       try
        {
            FileInputStream fis = new FileInputStream("customerfile");
            ObjectInputStream ois = new ObjectInputStream(fis);
            customers = (ArrayList) ois.readObject();
            ois.close();
            fis.close();
         }catch(IOException ioe){
             ioe.printStackTrace();
             return;
          }catch(ClassNotFoundException c){
             System.out.println("Class not found");
             c.printStackTrace();
             return;
          }
       for(Customer tmp: customers){
            System.out.println(customer.toString());
        }
     
         customers.add(customer); 
     try{
         FileOutputStream fos= new FileOutputStream("customerfile");
         ObjectOutputStream oos= new ObjectOutputStream(fos);
         oos.writeObject(customers);
         oos.close();
         fos.close();
       }catch(IOException ioe){
            ioe.printStackTrace();
        }     
         
    }
    
    private void changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeActionPerformed
        Message.setText("");
         Date date = new Date();
        SimpleDateFormat ft = 
        new SimpleDateFormat ("E yyyy.MM.dd");
         DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
         if(customerTable.getSelectedRow() == -1){
             if(customerTable.getRowCount() == 0){
                 Message.setText("Table is empty");
             }else{
                 Message.setText("You must select a product");
                 }
         }else{  changeSave(customerTable.getSelectedRow(), id.getText(), name.getText(), surname.getText(), no1.getText(), no2.getText(), address.getText());
                 model.setValueAt(id.getText(), customerTable.getSelectedRow(),0);
                 model.setValueAt(name.getText(), customerTable.getSelectedRow(),1);
                 model.setValueAt(surname.getText(), customerTable.getSelectedRow(),2);
                 model.setValueAt(no1.getText(), customerTable.getSelectedRow(),3);
                 model.setValueAt(no2.getText(), customerTable.getSelectedRow(),4);
                 model.setValueAt(address.getText(), customerTable.getSelectedRow(),5);
         }
    }//GEN-LAST:event_changeActionPerformed

    private void changeSave(int index, String id,String name, String surname, String no1, String no2, String address){
        ArrayList<Customer> customers = new ArrayList<>();
        
        try
        {
            FileInputStream fis = new FileInputStream("customerfile");
            ObjectInputStream ois = new ObjectInputStream(fis);
            customers = (ArrayList) ois.readObject();
            ois.close();
            fis.close();
         }catch(IOException ioe){
             ioe.printStackTrace();
             return;
          }catch(ClassNotFoundException c){
             System.out.println("Class not found");
             c.printStackTrace();
             return;
          }
        
        customers.get(index).setId(Integer.parseInt(id));
        customers.get(index).setName(name);
        customers.get(index).setSurname(surname);
        customers.get(index).setNo1(Integer.parseInt(no1));
        customers.get(index).setNo2(Integer.parseInt(no2));
        customers.get(index).setAddress(address);
      
        try{
         FileOutputStream fos= new FileOutputStream("customerfile");
         ObjectOutputStream oos= new ObjectOutputStream(fos);
         oos.writeObject(customers);
         oos.close();
         fos.close();
       }catch(IOException ioe){
            ioe.printStackTrace();
        } 
    
    }
    
    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        id.setText(model.getValueAt(customerTable.getSelectedRow(),0).toString());
        name.setText(model.getValueAt(customerTable.getSelectedRow(),1).toString());
        surname.setText(model.getValueAt(customerTable.getSelectedRow(),2).toString());
        no1.setText(model.getValueAt(customerTable.getSelectedRow(),3).toString());
        no2.setText(model.getValueAt(customerTable.getSelectedRow(),4).toString());
        address.setText(model.getValueAt(customerTable.getSelectedRow(),5).toString());
    }//GEN-LAST:event_customerTableMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        if(customerTable.getSelectedRow() == -1){
             if(customerTable.getRowCount() == 0){
                 Message.setText("Table is empty");
             }else{
                 Message.setText("You must select a product");
                 }
         }else{
                 saveDelete(customerTable.getSelectedRow());
                 model.removeRow(customerTable.getSelectedRow());
         }
    }//GEN-LAST:event_deleteActionPerformed

    private void saveDelete(int index){
        ArrayList<Customer> customers = new ArrayList<>();
        
        try
        {
            FileInputStream fis = new FileInputStream("customerfile");
            ObjectInputStream ois = new ObjectInputStream(fis);
            customers = (ArrayList) ois.readObject();
            ois.close();
            fis.close();
         }catch(IOException ioe){
             ioe.printStackTrace();
             return;
          }catch(ClassNotFoundException c){
             System.out.println("Class not found");
             c.printStackTrace();
             return;
          }
        
        customers.remove(index);
      
        try{
         FileOutputStream fos= new FileOutputStream("customerfile");
         ObjectOutputStream oos= new ObjectOutputStream(fos);
         oos.writeObject(customers);
         oos.close();
         fos.close();
       }catch(IOException ioe){
            ioe.printStackTrace();
        } 
    
    }
    
    private void fullTable(){
    ArrayList<Customer> customers = new ArrayList<>();
         try
        {
            FileInputStream fis = new FileInputStream("customerfile");
            ObjectInputStream ois = new ObjectInputStream(fis);
            customers = (ArrayList) ois.readObject();
            ois.close();
            fis.close();
         }catch(IOException ioe){
             ioe.printStackTrace();
             return;
          }catch(ClassNotFoundException c){
             System.out.println("Class not found");
             c.printStackTrace();
             return;
          }
          DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
          for(Customer temp:customers){
                model.addRow(new Object[]{temp.getId(), temp.getName(), temp.getSurname(), temp.getNo1(),temp.getNo2(),temp.getAddress()});
          
          }
         
    
    }
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Message;
    private javax.swing.JButton add;
    private javax.swing.JTextArea address;
    private javax.swing.JButton change;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton delete;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel message;
    private javax.swing.JTextField name;
    private javax.swing.JTextField no1;
    private javax.swing.JTextField no2;
    private javax.swing.JTextField surname;
    // End of variables declaration//GEN-END:variables
}
